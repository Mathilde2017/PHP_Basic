<?php
/***
一，操作系统安装
***/
// 1.1 安装虚拟机：VirtualBox
	软件下载：http：//www.virtualbox.org/
	一路点击一步下一步完成安装

// 1.2 安装Linux:Centos
	1.2.1 官方网站：https://www.centos.org/
		点击Get Centos Now,下载Minimal  ISO
		说明：也可以去你信任的速度较快的镜像源下载，如：
		Mirrors.aliyun.com
		Mirrors.sohu.com
		Mirrors.163.com
	1.2.2 打开VirtualBox软件，点击新建
		设置：名称、类型、版本
	1.2.3 完成上述设置，点击下一步，
		设置：内存大小，建议1G
	1.2.4 然后一路next，直到设置文件夹位置及大小
		位置：点击右侧文件夹，选择一个安全，空间足够的目录
		大小：不小于10G，建议20G
	1.2.5 设置完成完成后，点击创建，即可完成安装

// 1.3修改CentOS系统配置
	1.3.1 上述操作完成后会出现一个虚拟机
	1.3.2 点击设置按钮对其进行相关的设置
	存储：点击控制器后的第一个光盘图标，选择你的镜像文件（ISO）位置
	网络：链接方式选择桥接网卡
	1.3.3 点击确定完成即可完成配置

// 1.4 上述操作完成后点击启动
	1.4.1 选择默认的第一个启动模式
	1.4.2 我们的镜像是完整的，跳过验证选择Skip
	1.4.3 点击next,进入下一步，选择简体中文和美国英语式键盘
	1.4.4 点击下一步，选择：默认的基本存储设备
	1.4.5 点击下一步，选择：是，忽略所有数据（Y）
	1.4.6 设置主机名：此处本人设置为：Linux
	1.4.7 点击下一步：选择默认时区（亚洲/上海）
	1.4.8 点击下一步；设置根密码和确认密码（一定要牢记），本人的密码设置为123456
	1.4.9 点击下一步：选择：替换现有的Linux系统
	1.4.10 选择默认设置，直接点击下一步，
	1.4.11 然后点击格式化，再点击将修改写入磁盘
	1.4.12 点击下一步，耐心等待即可

// 说明：
	1 VirtualBox安装和使用可能会出错，原因可能是系统GHOST（需要纯净安装）
	2 安装虚拟机时只有32位的，原因可能是BIOS没有开启虚拟技术或软件不支持
	3 安装过程中的页面可能显示不完整可以拖拽右侧的滚动条
	4 VirtualBox和物理机（你的电脑）切换使用热键（右侧的Ctrl键）
	5 安装完成后，点击重新引导，系统会自行启动

/***
二，网卡基本配置
***/
	系统启动后需要输入用户名和密码
	用户名：root
	密码：之前安装过程设置的密码(123456)

	2.1 切换到/etc/sysconfig/network-scripts/
	cd /etc/sysconfig/network-scripts/

	2.2 将ifcfg-eth0被分成ifcfg-eth0.
	cp ifcfg-eth0   ifcfg-eth0.bak

	2.3 修改配置文件（ifcfg-eth0）
	修改内容ONBOOT=yes
	添加内容：DNS1=8.8.8.8

	2.4 操作网卡（启动/暂停/重启）
	启动：/etc/init.d/network start
	暂停：/etc/init.d/network stop
	重启: /etc/init.d/network  restart

	2.5 使用工具连接虚拟机
	推荐：putty,轻量，免费，方面（无需安装）

	2.6 开关机命令
	重启：shutdown –r  now 或 reboot
	关机：shutdown –h  now或poweroff或halt

	2.7 最常用命令及操作
	Ifconfig:查看或配置网卡信息（包括IP）
	cd: change directory,切换到工作目录
	ls: list ，列表显示当前目录的内容
	pwd: print  work  directory,打印工作目录
	tab:自动补全（命令/参数）
	clear:清空屏幕(ctrl+L)
	history：显示历史命令
	上/下：翻看历史命令
	Ping ip/域名：网络监测

	2.8 VI基本操作
	打开文件：vi  文件名
	开始编辑：a或者i
	退出编辑：ESC
	保存退出：shift+zz

/***
三，目录结构介绍
***/

/***
四，入门必备命令
***/
	4.1 命令格式
		命令 [选项] [参数]
	4.2 必备命令：
		cd : 	change directory， 切换到工作目录
		pwd : print work directory， 打印工作目录
		ls : list，列出所有目录的内容
			-a 显示所有的文件，包括隐藏文件(以 ' '或'.'等开头的文件)
			-l 列表显示文件，会显示文件的所有信息 ls -l <=>  ll 
			-h 更加人性化的显示文件(文件大小会出现K/M/G等)

			ls -l 结果说明，按列描述如下：
			文件类型权限 | 引用数 | 用户 | 组 | 大小 | 月| 日| 年/时间 | 名称
			文件类型说明：
			-：普通文件
			d：目录文件
			b：块设备
			c：字符设备
			l：链接
			s：套接字
		ping ：一般用于检测网络是否连通，后可跟IP地址或者域名
		ifconfig ：现在只需要知道ifconfig 可以查看网卡信息就可以了

/***
五，终端编辑工具
***/
	终端编辑工具：vi/vim、emacs等
	基本介绍：vim是vi的扩展，被誉为终端编辑之神
	软件安装：yum install -y vim
	工作模式：
		5.1 正常模式
			vim filename 若文件存在，直接打开；若不存在，则会创建，若不修改则不会创建空文件；
			a.主要用来浏览或者修改文本内容
			b.使用vim打开文件的默认模式
			c.在任意模式下按ESC按键即可进入该模式
		5.2 编辑模式
			主要用来向文本添加内容，也叫插入模式
			正常模式下，输入以下字符都可进入编辑模式
			i：在光标所在的字符前开始输入文字
			I：在行首指第一个非空白字符处开始输入文字
			a：在光标所在字符后开始输入文字
			A：在行尾开始输入文字
			o：在光标所在的行的下面单独开一新行来输入文字
			O：在光标所在行的上面单独开一新行来输入文字
			s：删除光标所在的字符并进入插入模式
			S：删除光标所在行并进入插入模式
		5.3 命令模式
			主要用来管理文件或设置vim，如：保存，退出，放弃等，而不是修改文件内容
			在正常模式下，输入':'即可进入命令模式，由于操作都是在一行完成，因此也叫单行模式
			保存文件：w
			退出软件：q
			保存退出：x，等价于wq，等价于正常模式下的 shift+zz
			强制操作：!
			放弃修改：e
		5.4 可视模式
			v：可视块模式
			V：可视行模式

		5.5 vim 使用技巧：可以大大提高开发效率
			5.5.1 打开文件
				vim filename 		打开文件，并将光标定位到文件开头
									若文件已存在，则直接打开；
									若文件不存在，则新建文件(不做修改的文件不会创建)
				vim filename +n 	打开文件，并将光标定位到文件的第n行
				vim filename + 	打开文件，并将光标定位到文件末尾
			5.5.2 光标定位
				gg：首行
				GG：尾行
				ngg：第n行，等价于命令行输入':n'，敲回车
				0：行首
				^：首个非空字符
				$：行尾
				k：向上
				j：向下
				h：向左
				l：向右
			5.5.3 复制粘贴
				yy：复制光标所在行
				dd：剪切光标所在行
				p：粘贴缓冲区的内容
				nyy：复制光标开始的n行

			5.5.4 操作回退
				u：撤销刚才的操作
				ctrl+r：反撤销
			5.5.5 查找替换
				命令模式下操作
				:或者? 查找内容，然后敲回车即可查找相关内容，n向前翻，N向后翻
				:%s/ 查找内容/替换内容/[g]，将查找到的内容替换，g表示全局替换，[]表示可选
				:起始行,结束行s/查找内容/替换内容/[g]，替换从起始行到结束行查找到的内容，g功能同上
			5.5.6 基本配置
				:set nu 	设置行号
				:set nonu 	取消行号
				:set tabstop=4 设置tab键盘为4个空格
				:set fileeccodings=utf-8,gbk 设置字符集
			5.5.7 配置文件
				以上第6步在命令模式下的配置是单次的，退出vim后配置就无效了，要想一次配置，自动生效
				可以创建专门的配置文件；
				在用户目下，创建.vimrc 文件，这个文件就是vim的配置文件，当该用户登录时就会生效，可以将
				vim相关的配置写入即可
				要想使配置文件生效可以重启系统，也可以使用命令 source ~/.vimrc
			说明：
				文件未保存就关闭vim时候，会产生临时文件，下次打开时会提示恢复/删除等相关操作。



/***
六，文件整体操作
***/
	touch：
		作用：创建普通文件
		格式：touch file1 [file2]
	cp：
		作用：拷贝文件
		格式：cp 源文件 目标文件
		例：cp /2.txt ./22.txt   复制根目录下的2.txt到当前目录，并更名为22.txt
	rm：(remove的简写)
		作用：删除文件
		格式：rm 文件
	mv：
		作用：移动文件
		格式：mv 源文件  目标文件
		例：mv /2.txt ./22.txt   移动根目录下的2.txt到当前目录，并更名为22.txt
	mkdir：
		作用：创建目录文件
		格式：mkdir dir1 [dir2]

	rmdir:
		作用：删除空的目录文件
		格式：rmdir dir
		例：rmdir -rf aa 不提示，直接删除该目录
	说明：
		删除文件时会有提示，若不想提示可以天剑参数 '-f'
		删除或拷贝目录时需要添加参数 '-r'

	In：
		作用：创建链接文件
		格式：In [-s] 源文件 目标文件
		硬链接：不加 '-s'选项时，简单理解为一个文件有多个文字
			- 不占用实际空间
			- 不允许给目录创建
			-  只能跨文件系统
		软链接：添加 '-s'选项时，简单理解为一个文件的内容就是另以文件的路径
			- 类似于Windows的快捷方式
			- 可以对目录创建
			- 可以跨文件系统


/***
七，文件搜索定位
***/
	grep：
		作用：General Regular Expression Parser，通用规则表达式分析程序
			是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来
		格式：grep [选项] pattern [文件名]
		选项：
			- i ：字母不区分大小写
			-n：显示行号
		说明：
			- pattern 为所要匹配的正则表达式字符串
			- 要用好grep这个工具，其实就是用好正则表达式
		实例：
			grep ftp /etc/passwd
			在/etc/passwd文件下查找包含'ftp'字符的行：
			grep 'test' d*
			显示所有以d开头的文件包含'test' 的行
			ls /bin | grep '^m'
			通过管道过滤ls /bin输出的内容，只显示以m开头的行
			grep -i 'hello world' menu.h main.c
			显示在menu.h 和 main.c文件中匹配 'hello world'的行，忽略大小写

		find：
			作用：最常见和最强大的查找命令，你可以用它找到任何你想找的文件
			格式：find [目录] [条件] [动作]
				目录：要搜索的目录机器所有的子目录，默认为当前目录
				条件：所要搜索的文件的特征
				动作：对搜索结果进行特定的处理
			选项：
				-name ：指定文件名，可以通过*模糊匹配
				-type：指定文件类型(b/c/d/p/l/f)
				-size：指定文件大小，单位可以为 K/M/G，+表示大于，-表示小于
				-user：指定用户
				-group：指定组
				-mtime/atime/ctime 指定修改/访问/创建时间，单位为天，+表示几天前，-表示几天内
				-amin/mmin/cmin 功能同上，单位为分钟
			说明：如果你要寻找一个普通文件，使用find回事一个不错的主意。
			由于find在寻找数据的时候，相当耗费资源，所以没事情不要使用find
			有更棒的指令可以取代，那就是 whereis与which
		whereis：
			作用：只能用于程序名的搜索
			格式：whereis 命令
			实例：whereis grep
			结果：grep：   /bin/grep    /user/share/man/man1/grep.1.gz
			             名称        二进制目录       帮助文档路径

		which：
			作用：在$PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。
			也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个
			格式：which 命令

		PATH：
			说明：环境变量，与Windows中系统变量中的path类似
			打印：echo $PATH
			导出：
				方式1：一次性的设置
					export PATH = $PATH:dir1 [:dir2]
				方式2：永久性的设置，所有用户有效，需要重启生效或使用source命令
					将方式1的导出操作添加到文件/etc/profile的末尾
				方式3：永久性的设置，只针对一个用户，需要重启生效或使用source命令，优先级高于2
					将方式1的导出操作添加到文件 ~/.bashrc的末尾

/***
八，文件压缩解压
***/
	gzip：
		作用：压缩文件，只能是单个文件，不能是多个文件，也不能是目录
		格式：gzip file
		说明：执行命令会生成file.gz，会删除原来的file
		选项：-d 等价于 gunzip
	gunzip：
		作用：解压使用gzip压缩生成的文件
		格式：gunzip file.gz
		说明：解压file.gz文件，生成file，删除原来的file.gz
	bzip2/bunzip2：
		说明：
		- 用法与gzip/gunzip相同，只是多了 '-k' 参数，压缩或解压后保留原文件
		- 使用bzip2压缩的文件后缀为bz2，而使用gzip压缩的文件后缀为gz
	tar：
		说明：gzip/gunzip/bzip2/bunzip2命令只适用于单个文件，而 tar 则可以将多个文件或目录进行压缩打包
		选项：
			-c：压缩
			-x：解压
			-z：使用gzip
			-j：使用bzip2
			-f：指定处理文件
			-v：显示(压缩解压过程的)详细信息
			-C：指定解压后存放文件的目录
		实例：
			tar -zcvf 123.tar.gz 1 2 3 //使用gzip将1 2 3 压缩成123.tar.gz
			tar -zxvf 123.tar.gz [-C /tmp] //使用gzip将123.tar.gz解压[至/tmp目录]

/***
九，文件权限管理
***/
	chmod：
		作用：修改文件权限
		说明：ls -l 中的第一列就是权限相关的信息，下面对其中的11个字符进行说明
			1：文件类型(b/c/d/l/s/p/-)
			2/3/4：文件所有者的读(r)/写(w)/执行(x)权限，-表示不具有该权限
			5/6/7：文件所有者所属的组的读/写/执行权限
			8/9/10：其他用户的读/写/执行权限
			11：.表示启用了selinux，空表示没有开启selinux
		参数：
			r：可读
			w：可写
			x：可执行，在Linux系统中没有后缀的概念，文件的类型及权限不以后缀区分
			+：添加权限
			-：去掉权限
			=：设置权限
			u：用户
			g：组
			o：其他
		数值表示：
			Linux中的权限以一组数据来表示，所有者/组/其他权限分别以3位二进制表示
			然后再讲其他8进制近OK了，如：755 =>111 101 101 
			结果就是：所有者拥有读/写/执行权限，同组拥有读/执行权限，其他拥有读/执行权限
		实例：
			chmod +x file 给文件添加可执行权限
			chmod u+x file 给文件的所有者添加可执行权限
			chmod u=rwx,g=rx,o=rx file 
			chmod 0755
	umask：
		作用：查看或设置umask的值，umask用来确定创建文件的默认权限
		格式：umask [value]
		说明：
			- 若后面没有跟值表示查看，后面有值表示设置
			- 创建的普通文件默认没有执行权限
		实例：umask 为 0022 =>000 000 010 010 
			创建的目录权限为，上面取反，即 111 101 101 =>755,rwx r-x r-x
			创建的普通文件权限 rw- r-- r--
		配置：
			所有用户：/etx/profile
			单个用户：~/.profile 或者 ~/.bash_profile
	lsattr：
		作用：查看使用chattr设置的文件属性
		格式 lsattr
	chattr：
		作用：修改文件的属性，可以提高系统的稳定性
		格式：chattr [选项] 文件
		选项：i：表示忽略，+表示添加，-表示去掉
		实例：chattr +i file ，此刻任何用户都无法删除该文件，确实需要删除，只需
		chattr -i file 再执行删除操作即可。

/***
十，用户及用户组
***/
	whoami：
		作用：查看当前登录的用户
		格式：whoami
	/etc/passwd：
		说明：该文件存放了系统中所有的用户，每一行的每一列如下：
		用户名：密码：描述：用户ID/UID：组ID/GID：用户家目录：shell
		实例：cat /etc/passwd
	useradd:
		作用：添加(创建)用户名
		格式：useradd 用户名
		选项：
			-d：指定用户家目录
			-u：指定用户ID，必须大于500(小于500都已经被系统占用)
			-s：指定用户执行的shell，若用户已经创建可以使用以下方式禁止登录
			chsh 用户名 -s /sbin/nologin
	userdel：
		作用：指定删除用户
		格式：userdel 用户名
		说明：彻底删除用户还需删除'/home/用户名' 目录和 '/var/mail/用户名' 目录
	passwd：
		作用：设置用户密码
		格式：passwd [用户名]
		说明：
			- 修改指定用户的密码，如不能指定则修改当前登录的用户密码
			- 查看 所有用户的密码 cat /etc/shadow
		实例：passwd [用户名] ->键入Enter，根据提示修改密码
	su：
		作用：切换用户
		格式：su [用户]
		说明：切换到指定用户，若不指定则切换到root用户
	sudo：
		说明：
		- 若指向简单的执行一个超级用户的命令，不想切换用户
		- 格式是在原理命令的前面加上 sudo 即可
	特殊标识：
		#：超级用户
		$：普通用户
		~：表示用户家目录

	/etc/group：
		说明：查看系统中所有的组
	groupadd：
		作用：添加用户组
		格式：groupadd 组名
	groupdel：
		作用：删除用户组
		格式：groupdel 组名
	gpasswd：
		作用：向用户组添加用户或删除用户
		格式：gpasswd [选项] 用户名 组名
		选项：
			-a：将制定的用户加入指定组
			-d：将制定用户从制定组删除
	chgrp：
		作用：设置文件所属的组
		格式：chagrp 组名 文件名
		说明：修改文件所属的组
	chown：
		作用：设置文件的所有者
		格式：chown 用户 [:组名] 文件名
		说明：修改文件的所有者[及组名]
	说明：
		- 修改用户及组的时候，可以使用UID或GID
		- 加上-R参数可以递归修改子目录的用户及组


?>